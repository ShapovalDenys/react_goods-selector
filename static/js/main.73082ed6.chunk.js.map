{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","onSelected","item","setState","prevState","removeSelected","items","splice","indexOf","removeAll","createHeader","elToHeader","lastEl","length","join","this","className","type","onClick","map","classNames","list__active","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,aAAc,CAAC,Q,EAGjBC,WAAa,SAACC,GACZ,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,aAAa,GAAD,mBAAMI,EAAUJ,cAAhB,CAA8BE,S,EAI9CG,eAAiB,SAACH,GAChB,EAAKC,UAAS,SAACC,GACb,IAAME,EAAK,YAAOF,EAAUJ,cAI5B,OAFAM,EAAMC,OAAOD,EAAME,QAAQN,GAAO,GAE1B,CACNF,aAAcM,O,EAKpBG,UAAY,WACV,EAAKN,SAAS,CAAEH,aAAc,M,EAGhCU,aAAe,WACb,IAAQV,EAAiB,EAAKD,MAAtBC,aACFW,EAAU,YAAOX,GACjBY,EAASD,EAAWJ,QAAQ,GAElC,OAAQP,EAAaa,QACnB,KAAK,EACH,MAAO,oBAET,KAAK,EACH,MAAM,GAAN,OAAUb,EAAa,GAAvB,gBAEF,KAAK,EACH,MAAM,GAAN,OAAUA,EAAa,GAAvB,gBAAiCA,EAAa,GAA9C,iBAEF,QACE,MAAM,GAAN,OAAUW,EAAWG,KAAK,MAA1B,aAAoCF,EAAOE,KAAK,SAAhD,kB,4CAIN,WAAU,IAAD,OACCd,EAAiBe,KAAKhB,MAAtBC,aAER,OACE,sBAAKgB,UAAU,MAAf,UACE,+BACGD,KAAKL,eACL,IACAV,EAAaa,OAAS,GAEnB,wBACEI,KAAK,SACLD,UAAU,eACVE,QAASH,KAAKN,UAHhB,sBASN,6BACGZ,EAAgBsB,KAAI,SAAAjB,GAAI,OACvB,qBAEEc,UACEI,IAAW,aACT,CAAEC,aAAcrB,EAAasB,SAASpB,KAJ5C,UAOGA,EACAF,EAAasB,SAASpB,GAEnB,wBACEe,KAAK,SACLD,UAAU,eACVE,QAAS,kBAAM,EAAKb,eAAeH,IAHrC,oBASA,wBACEe,KAAK,SACLD,UAAU,eACVE,QAAS,kBAAM,EAAKjB,WAAWC,IAHjC,sBAlBCA,e,GArEDqB,IAAMC,WAuGT1B,ICzHf2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.73082ed6.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGood: ['Jam'],\n  };\n\n  onSelected = (item: string) => {\n    this.setState((prevState) => ({\n      selectedGood: [...prevState.selectedGood, item],\n    }));\n  };\n\n  removeSelected = (item: string) => {\n    this.setState((prevState) => {\n      const items = [...prevState.selectedGood];\n\n      items.splice(items.indexOf(item), 1);\n\n      return ({\n        selectedGood: items,\n      });\n    });\n  };\n\n  removeAll = () => {\n    this.setState({ selectedGood: [] });\n  };\n\n  createHeader = () => {\n    const { selectedGood } = this.state;\n    const elToHeader = [...selectedGood];\n    const lastEl = elToHeader.splice(-2);\n\n    switch (selectedGood.length) {\n      case 0:\n        return 'No goods selected';\n\n      case 1:\n        return `${selectedGood[0]} is selected`;\n\n      case 2:\n        return `${selectedGood[0]} and ${selectedGood[1]}  is selected`;\n\n      default:\n        return `${elToHeader.join(', ')}, ${lastEl.join(' and ')} is selected`;\n    }\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {this.createHeader()}\n          {' '}\n          {selectedGood.length > 0\n            && (\n              <button\n                type=\"button\"\n                className=\"list__button\"\n                onClick={this.removeAll}\n              >\n                Clear\n              </button>\n            )}\n        </h1>\n        <ul>\n          {goodsFromServer.map(item => (\n            <li\n              key={item}\n              className={\n                classNames('list__item',\n                  { list__active: selectedGood.includes(item) })\n              }\n            >\n              {item}\n              {selectedGood.includes(item)\n                ? (\n                  <button\n                    type=\"button\"\n                    className=\"list__button\"\n                    onClick={() => this.removeSelected(item)}\n                  >\n                    Remove\n                  </button>\n                )\n                : (\n                  <button\n                    type=\"button\"\n                    className=\"list__button\"\n                    onClick={() => this.onSelected(item)}\n                  >\n                    Select\n                  </button>\n                )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}